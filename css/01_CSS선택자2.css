h1 {
  color: red;
}
code {
  background-color: pink;
  font-weight: bold;
  display: block;
}
/* 기본속성 선택자 */

/* div 태그 중에 name 속성 값이 name-1 인 요소에 배경색 그린*/
div[name="name-1"] {
  background-color: green;
}

/* div 태그 중에 name 속성 값이 name-1 인 요소에 배경색 그린*/
div[name="name-2"] {
  background-color: yellow;
}

/* 모든 div 요소의 글자색을 gray 로 변경*/
div {
  color: gray;
}

/* p 태그 중 data 속성의 값이 data-1 만 배경색 red */

p[data="data-1"] {
  background-color: red;
}

/* p 태그 중 내용이 p3, p4인 애만 배경색 blue */

p[data="data-2"] {
  background-color: blue;
}

/* 모든 요소 중에서 name 속성값이 name-1 인 요소 글자 크기 30px */

/* *[name="name-1"] {
  font-size: 30px;
} */
[name="name-1"] {
  font-size: 30px; /*[name="name-1"]{font-size : 30px;} 한줄로 써도 됨*/
}
/* 모든 요소를 선택 할 때 태그 명칭을 생략 할 수 있음 */

/* 자식 선택자 */
#parent1 {
  background-color: skyblue;
}

#parent1 > li {
  background-color: gold;
}

/* 선택자를 연이어 작성할 수 있다. */
/* 자식 2, 자식 3의 글자색을 red로 설정 */

#parent1 > li > span {
  color: red;
}

/* 후손 선택자 */
/* id 가 parent2 인 요소의 후손 중 모든 p 태그 선택 */

#parent2 p {
  background-color: lightcoral;
}
#parent2 > div > p {
  color: blue;
}

/* 반응선택자 */
.test-div {
  /* 3px 실선 검정색 */
  border: 3px solid black;
  width: 300px;
  height: 200px;
  background-color: #ddd;
  /* 아래쪽 요소와 30px 만큼 간격 추가 */
  margin-bottom: 30px;
  /* 마우스 커서 변경 */
  cursor: pointer;
}
#activeBox:active {
  background-color: yellow;
}
#activeBox:hover {
  /* 배경이미지 넣기 */
  background-image: url(../images/pizza/새우.png);
  /* 배경이미지 크기 */
  background-size: cover; /*요소 크기에 이미지 사이즈 맞춤*/
}

/* 상태선택자 */

#input1:focus {
  /* 초점이 맞춰졌을 때 요소 바깥에 생기는 선 */
  outline: 3px dashed red;
}
#input1 {
  /* 선 색상만 변경하고 굵기, 종류 생략 */
  /* 기본적으론 outline은 바깥 선 border는 내부선 */
  /* 기본 border-color 색상은 눈에 띄지 않음 */
  border-color: blueviolet;
}

#input2:checked {
  width: 30px;
  height: 30px;
  /* radio, checkbox 선택에서 보이는 색상이 아니라 이미지 */
  /* 그렇기 때문에 배경색이 적용되지 않는다. */
  /* 선택 할 경우 가로세로 크기를 30px로 설정했기때문에 크기만 커짐 */
  background-color: red;
}

.input3:enabled {
  background-color: skyblue;
}
.input3:disabled {
  background-color: lightcoral;
}

/* 동위 선택자 */
/* 바로 뒤 형제 요소 하나 */
#div1 + div {
  background-color: yellow;
}

/* 
~ : 뒤에 존재하는 형제요소 중 일치하는 요소 모두 선택
*/
#div3 ~ div {
  /* 중간에 존재하는 p 태그를 제외하고 div는 모두 배경색 설정 */
  background-color: lawngreen;
}

/* checkbox 만들기 */
/* 1. label 요소를 checkbox 모양으로 만들기 */
/* check 라는 태그 요소 바로 뒤에 있는 label 하나만 선택하겠다.*/
#check + label {
  width: 30px;
  height: 30px;
  border: 1px solid black;
  /*크기지정 o, 한 줄에 배치할 수 있도록 수평분할*/
  display: inline-block;
  cursor: pointer;
  border-radius: 20%;
  /*사용자가 선택을 하지 못하게 막기*/
  user-select: none;
}

/*체크박스가 체크 되었을 때 label에 체크박스 이미지 표시*/

/* 1. check + label 의 경우에는 체크밖스에 체크를 하지 않아도 체크를 한 듯한 이미지가 보이는 경우 */
#check:check + label {
  background-image: url(../images/checkbox.png);
  background-size: cover;
}
/* checked + label 의 경우에는 체크박스에 체크를 해야지만 체크를 한 듯한 이미지가 보이게됨 */
#check:checked + label {
  background-image: url(../images/checkbox.png);
  background-size: cover;
}
/* 만약에 빈 네모창에 개발자가 넣고자 하는 체크가 된 박스 이미지를 표시하기를 원한다면
   check */
#check {
  display: none;
}

/* 파일 버튼 만들기 */
/* 1. 파일 선택 버튼을 업로드 한 이미지로 변경*/
#imgFile + label {
  width: 30px;
  height: 30px;
  border: 1px solid black;
  /* 라벨의 경우에는 라벨 태그 내부에 텍스트를 작성해주거나
  라벨 내부에 이미지를 업로드 해야함 */
  display: inline-block;
  border-radius: 20%;
  cursor: pointer;
  background-image: url(../images/upload.png);
  background-size: cover;
  user-select: none;
}

/*파일 선택 input 숨기기*/
#imgFile {
  display: none;
}
/*파일 선택 input 숨기기*/
#imgFile2 {
  display: none;
}
/*#imgFile2 다음에 오는 img 크기 조정하기 */
/* 후손 선택자 화살표를 이용해서 #imgFile2 다음에 label 내부의 이미지만 선택 */

#imgFile2 + label > img {
  width: 30px;
}
